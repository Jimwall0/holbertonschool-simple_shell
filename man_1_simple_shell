.TH "Dec 2023" "Version 1.0" "simple_shell man page"
.SH NAME
.B simple_shell\- custom shell interface implementation
.SH SYNPOPSIS
.B simple_shell
[\fICOMMAND\fR]...[\fIOPTIONS\fR]
.SH DESCRIPTION
Our simple_shell program is a limited-functionality recreation of a command-line shell. It will display an input prompt, wait for the user to provide input, and then execute the desired command. 

To do so, our simple_shell searches through the user's environment of executable commands found in the PATH. Using string tokenization, it then takes the user's input, appends the command to each tokenized directory, and executes the command through the creation of a child process upon finding an executable path. 

It also handles various error cases along the way. 
.SH COMMANDS
Our simple shell recognizes a wide variety of commands. Some of the more common ones include:
.B
.IP ls
list files in current directory
.B
.IP pwd
print the path of the current working directory
.B
.IP env
prints the environmental variables for the current shell
.B
.IP echo \fIARGUMENTS...\fR
print the specified \fIARGUMENTS\fR to the standard output
.B
.IP exit
exits the simple shell
.SH OPTIONS
Similarly, our shell will accept the standard options for the command that it is executing
.SH INTERACTIVE MODE
When started without arguments, \fBsimple_shell\fR enters interactive mode, allowing commands to be entered and executed one at a time. 
.SH EXAMPLES
.TP
To list files in the current directory in long format:
.B simple_shell ls -l
.TP
To create a new text file:
.B simple_shell touch test.txt
.TP
To print a message:
.B simple_shell echo "Hello, world!"
.SH AUTHORS
Program created by Ryan Donaldson and Tsim Muaj Yang.
